import { Injectable } from '@nestjs/common';

import { PuppeteerService } from '../puppeteer/puppeteer.service';
import { wait } from '../shared/lib/wait';
import { LOCAL_STORAGE_VALUES } from './consts/localStorage.consts';
import { SELECTORS } from './consts/selectors.consts';

const UPWORK_URL = 'https://www.upwork.com/nx/find-work/best-matches';

@Injectable()
export class AutomationService {
  constructor(private readonly ui: PuppeteerService) {
    this.ui.authFn = this.login.bind(this);
    this.ui.init().then(() => this.start());
  }

  async openJobInNewTab(link: string) {
    await this.ui.click(link);
    // * close modal
    try {
      await this.ui.waitForElement(SELECTORS.common.btn.popupClose);
      await this.ui.click(SELECTORS.common.btn.popupClose);
    } catch {}
  }

  async applyForJob() {
    // todo: scroll the page by 600px until bottom
    await wait(2000);
    await this.ui.scroll(600);
    await wait(2000);
    await this.ui.scroll(600);
    await wait(2000);
    await this.ui.scroll(-1200);
    await wait(200);

    await this.ui.click(SELECTORS.job.btn.apply);

    // * close modal
    try {
      await this.ui.click(SELECTORS.common.btn.modalClose).catch();
    } catch (e) {
      console.log(e);
    }

    await wait(2000);

    // * close connections modal
    // await this.click(SYSTEM_SELECTORS.BACKDROP).catch();
    // await this.page.mouse.click(100, 100);

    await this.ui.scrollIntoView(SELECTORS.bidding.input.coverLetter);
    await this.ui.type(
      SELECTORS.bidding.input.coverLetter,
      'This is our Cover Letter Generated By AI',
    );
  }

  private async login() {
    console.log('Logging in...');

    await this.ui.setToLocalStorage(LOCAL_STORAGE_VALUES);

    await wait(500);

    await this.ui.type(SELECTORS.login.input.email, process.env.UPWORK_EMAIL);
    await this.ui.click(SELECTORS.login.btn.goToPwd);

    await this.ui.type(SELECTORS.login.input.pwd, process.env.UPWORK_PASSWORD);
    await this.ui.click(SELECTORS.login.btn.login);

    try {
      await this.ui.type(
        SELECTORS.login.input.secret,
        process.env.UPWORK_SECRET,
      );
      await this.ui.click(SELECTORS.login.btn.login);
    } catch {}

    await this.ui.saveCookies();
  }

  async start() {
    await this.ui.navigateTo(UPWORK_URL);
    // await this.openJobInNewTab(
    //   'https://www.upwork.com/jobs/~021849407278305201462',
    // );
    // await this.applyForJob();
  }

  openWithLogin() {}
}
